<template>
<div>
	<div class="OnlineOrder">
		<div class="OnlineO_header">
			<img src="./img/onlineo_bg.png" width="100%" height="83px">
		</div>
	</div>
	<div class="Online_goods">
		<div class="menu-wrapper"  ref="menuWrapper">
			<ul>
				<li class="menu-item-selected" v-for="(items,index) in datalist">
					<span class="text">
						{{items.familyName}}
					</span>
				</li>
			</ul>
		</div>
		<div class="foods-wrapper" id="wrapper"  ref="foodsWrapper" >
			<ul v-for="(items,indexA) in datalist">
				<li class="food-list food-list-hook">
					<h1>{{items.familyName}}</h1>
					<ul>
						<li class="food-item"  v-for="(item,indexB) in items.goodsInfo">
							<div class="icon">
								<img width="52px" height="40px" src="./img/foods-icon.png">
							</div>
							<div class="content">
								<h2>{{item.goodsName}}</h2>
								<div class="price">
									<span class="newPrice">
										<span class="unit">￥</span>{{item.goodsPrice}}
									</span>
								</div>
								<div class="Online_Surplus">{{item.stockNo}}</div>
								<!-- <div class="cartcontrol-wrapper">
									  <div class="cartcontrol">
										    <transition name="fadeRotate">
										      <div class="cart-decrease" v-show="food.count>0" @click.stop.prevent="decreaseCart()" >
										          <span class="icon-remove_circle_outline inner"></span>
										      </div>
										    </transition>
										    <div class="cart-count" v-show="food.counts[index]>0">
										  	  {{food.counts[index]}}
										    </div>
										    <div class="cart-add" @click.stop.prevent="addCart($event,index)">
										      <i class="icon-add_circle"></i>
										    </div>
										</div>
								</div> -->
								<!-- <counter v-model="food.counts[index]" ></counter> -->
									<counter v-model="food.counts[indexB]" v-on:listenToChildEvent="count(indexA,indexB,item.goodsPrice)" ></counter>
							</div>
							
						</li>
						
					</ul>
				</li>

			</ul>
		</div>
	</div>
	<div class="shopCart">
		<div class="Online_content">
			<div class="Online_content-left">
				<div class="Online_shop_card">
					<div class="Online_logo">
						<i class="icon-shopping_cart"></i>
					</div>
					<div class="Online_price">￥{{food.price}} <span>({{food.count}}份)</span></div>
				</div>
			</div>
			<div class="Online_content-right">选好了</div>
		</div>
	</div>
</div>
	
</template>
<script>
import Vue from 'vue'
import BScroll from 'better-scroll'
import counters from '@/components/counter'
Vue.use(counters)
export default{
	 name: 'OnlineOrder',
	 data() {
	 	return {
	 		food:{
	 			count:0,
	 			price:0,
	 			counts:[]
	 		},
	 		tempCount:[],
	 		tempPrice:[]
	 	}
	 },
 	computed:{
		datalist(){
		   return this.$store.state.GoodsInfo.result
		}
	},
	 methods: {
	 		count(a,b,g){
	 			let i=a + '' +b,count=0,price=0;
	 			this.tempCount[i]=this.food.counts[b];
	 			this.tempPrice[i]=this.food.counts[b]*g;
	 			for(let v in this.tempCount) { 
  					count +=this.tempCount[v];
  					price +=this.tempPrice[v];
				}

				this.food.count = count;
				this.food.price = price;
	 		},
	    _initScroll() {
	      this.menuWrapper = new BScroll(this.$refs.menuWrapper, {
	        click: true
	      });
	      this.foodsScroll = new BScroll(this.$refs.foodsWrapper, {
	        click: true,
	        // probeType: 3
	      });
	      // 监控滚动事件
	      this.foodsScroll.on('scroll', (pos) => {
	        this.foodsScrollY = Math.abs(Math.round(pos.y))
	      })
		},
  	},
  	created(){
	   this.$nextTick(() => {
		this._initScroll(); // 初始化scroll
	 })
  	}

}
</script>

<style scoped>
	.OnlineOrder{
		position: relative;
	}
	.OnlineO_header{
		position: absolute;
		top: 0;
	    left: 0;
	    width: 100%;
	}
	.Online_goods{
		display: -ms-flexbox;
	    display: flex;
	    position: absolute;
	    top: 81px;
	    bottom: 48px;
	    width: 100%;
	    overflow: hidden;
	}
	.menu-wrapper{
	-ms-flex: 0 0 104px;
    flex: 0 0 104px;
    width: 104px;
    background: #fff;
    margin-top: 4px;
	}
.Online_goods .menu-item,.Online_goods .menu-item-selected{
    position: relative;
    display: table;
    height: 54px;
    line-height: 14px;
    width: 90px;
    padding: 0 7px;
	}
.Online_goods .menu-item-selected{
	 background: #fff;
	 margin-top: -1px;
}
.Online_goods .text{
	display: table-cell;
    vertical-align: middle;
    font-size: 12px;
    font-weight: 200;
    white-space: normal;
    line-height: 14px;
    border-bottom: 1px solid #B6B6B6;
    position: relative;
}
.menu-item-selected .text{
	border:none;
	color:#325496;
}
.menu-item{
	background: #EAEAEA;
}
.Online_icon{
    position: absolute;
    right: 8px;
    top: 5px;
    display: block;
    width: 17px;
    height: 17px;
    border-radius: 50%;
    color: #fff;
    background: red;
    text-align: center;
    line-height: 15px;
    /* padding: 10px; */
    font-size: 9px;
}
.Online_goods .foods-wrapper {
    -ms-flex: 1;
    flex: 1;
    margin-top: 2px;
    background: #fff;
}
.Online_goods .foods-wrapper .food-list h1 {
	height: 20px;
    line-height: 20px;
    padding-left: 12px;
    font-size: 12px;
    color: #325496;
    background: #fff;
    border-left: 3px solid #325496;
    border-bottom: 1px solid #FDFDFD;
    margin: 3px 0;
}
.foods-wrapper .food-item{
	position:relative;
	display: flex;
	display: -ms-flexbox;
	margin:0 18px;
    padding: 8px 0 0 0;
	 border-bottom: 1px solid rgba(7,17,27,0.1);
}
.food-item .icon {
    -ms-flex: 0 0 57px;
    flex: 0 0 57px;
}
 .food-item .content {
    -ms-flex: 1;
    flex: 1;
    padding-left: 10px;
}
.food-item .content h2 {
    margin: 2px 0 8px 0;
    font-size: 15px;
    line-height: 14px;
    height: 14px;
}
.content .price {
    font-size: 10px;
    font-weight: 700;
    line-height: 24px;
}
.newPrice{
    font-size: 14px;
    color: #f01414;
}
.unit{
	    font-size: 10px;
    font-weight: normal;
}

</style>