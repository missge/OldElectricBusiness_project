<template>
	<div class="OrderList">
		<div class="OL_tab">
			<div class="navbar">
				<li  @click="navbarFn('')" :class="{'navbar_on' : tabClick === ''}">全部</li>
				<li  @click="navbarFn(0)" :class="{'navbar_on' : tabClick === 0}">待支付</li>
				<li  @click="navbarFn(1)" :class="{'navbar_on' : tabClick === 1}">待收货</li>
			</div>
		</div>
		<div class="OL_content" >
		  	<div class="OL_tabone"  v-for="(items,index) in datalist">
		  		<ul>
		  			<li class="mar_top" >
		  				<div class="OL_title title_bor">
		  					<p class="lf"><i></i>{{items.merchantName}}</p>
		  					<h6 class="rt" v-show="items.status==0">待支付</h6>
		  					<h6 class="rt" v-show="items.status==1">已收货</h6>
		  				</div>
		  				<ul>
		  					<li class="OL_fooditem title_bor" v-for="(item,index) in items.orderGoodsRelList"> 
		  						<div class="OL_fooditem_lf">
		  							<img  :src="item.goodphoto" width="80px" height="50px">
		  						</div>
		  						<div class="OL_foodltem_rt">
		  							<span >{{item.goodsName}}</span>
		  							<span>￥{{item.price}}*{{item.qty}}件</span>
		  						</div>
		  					</li>
		  				</ul>

		  				<div class="mar_top_bot title_bor">
		  					<div class="mar_top_botlf">
		  						<span>总额:￥{{items.orderAmt}}</span>
		  						<span>实付:￥{{items.payAmt}}</span>
		  					</div>
		  					<div class="mar_top_botrt">
		  							<span class="btn_blue" v-show="items.status==1" @click="showCodeFn(index,items.orderId)">取餐码</span>
		  						<span class="btn_gray" @click="go_OrderdetailFn(items.orderId)">详情</span>
		  					</div>
		  				</div>
		  			</li>
		  		</ul>

		  	</div>
		</div>
		<div class="model" v-show="clicked">
			<div class="show_code_box">
				<div class="show_code">
					<canvas class="opcs-qrcode-content" id="qrcode"></canvas>
				</div>
				<p>由餐厅扫码进行取餐</p>
				<div class="show_code_bot" @click="hideCodeFn">
					我知道了
				</div>
			</div>
		</div>
	</div>
</template>
<script>
import {setCookie,getCookie} from '../../cookie/cookie.js'
var JsBarcode = require('jsbarcode')
import qs from 'qs'
import Vue from 'vue'
import QRCode from 'qrcode'
Vue.use(QRCode)
import router from '@/router'
export default{
	name:'OrderList',
	data(){
		return {
			clicked:false,
			datalist:[],
			tabClick:'',
      		OrderInfo :{
	 			mobile:getCookie('mobile'),
	 			openId:getCookie('openId'),
      			orderId:'',
      			status:'' 
      		}
		}
	},
	methods:{
		showCodeFn(I,str){
			this.clicked = true;
			console.log(I)
				console.log(str)
				this.useqrcode(str)
		},
		hideCodeFn(){
			this.clicked =false
		},
		go_OrderdetailFn(str){
			router.push({path:'/Orderdetail_goods',query:{orderId:str}})
		},
		utf16to8(str) {
	        var out, i, len, c;
	        out = "";
	        len = str.length;
	        for(i = 0; i < len; i++) {
	          c = str.charCodeAt(i);
	          if ((c >= 0x0001) && (c <= 0x007F)) {
	              out += str.charAt(i);
	          } else if (c > 0x07FF) {
	              out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));
	              out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));
	              out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));
	          } else {
	              out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));
	              out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));
	          }
	        }
	        return out;
     	},
       	useqrcode(str){
	        var str = str
	 	 	var qrcode = document.getElementById('qrcode')
	        var url = encodeURI(str)
	        console.log(url)
	        QRCode.toCanvas(
	          qrcode, url,
	          function (error) {
	            if (error) {
	              console.error(error)
	            }else{
	              console.log('success!');
	            }
	          }
	        )
      	},
      	// 查看订单信息
      	searchOrder(num){
      		 this.OrderInfo.status=num
      		var url = this.$store.state.localHostUrl +'/searchOrderInfo.json'
      		var data= qs.stringify(this.OrderInfo)
      		console.log(data)
      		var that = this
      		that.$http.post(url,data,{emulateJSON:true}).then(
      			function (res){
      				if(!res.data.ret){
      					that.datalist=res.data.data
      					console.log(res.data.data)		

      					// that.OrderInfo.orderId=res.data.data[0].orderId

      				}
					else{
						alert(res.data.descript)
					}
      			}
      		)
      	},
      	navbarFn(num){
      		this.searchOrder(num)
  		     this.OrderInfo.status = num
 			 this.tabClick = num
      	}
	},
	mounted(){
      this.useqrcode();
      this.searchOrder();
    },

}
</script>
<style scoped>
.navbar{height: 38px;display: flex;color:#7e8c8d}
.navbar li{font-size:12px;justify-content: center;align-items: center;flex:1;text-align: center;line-height: 38px;}
.navbar_on{color: #26a2ff;background: #fff;}
/*全部代码*/
	.OL_tab>.mint-navbar{
		background: #EEEEEE;
	}
	.OL_tab .mint-navbar .mint-tab-item{
		padding:13px 0;
	}
	.OL_tab .is-selected{
		background: #fff;
	}
	
/*全部代码结束*/
.model{
	position: fixed;
	top:0;
	bottom: 0;
	background: rgba(1,1,1,0.8);
	width: 100%;
	height: 100%;
}
.show_code_box{
	top:50%;
	left: 50%;
	position: absolute;
	transform: translateY(-50%) translateX(-50%);
	background: #fff;
	height: 220px;
	width: 220px;
}
.show_code{
	/*width: 135px;
	height: 135px;*/
	text-align: center;
	margin:0 auto;
	/*padding:20px 0 10px 0; */
}
.show_code_box>p{
	font-size: 13px;
	text-align: center;
	margin-bottom: 18px;
	color:#434343;
}
.show_code_bot{
	position: absolute;
	bottom: 0;
	height: 30px;
	line-height: 30px;
	text-align: center;
	background: #3575BB;
	color:#fff;
	width: 100%;
}
  .opcs-qrcode-content{
    width:75% !important;
    height:75% !important;
  }
</style>